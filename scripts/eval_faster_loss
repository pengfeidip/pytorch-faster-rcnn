#! /usr/bin/env python

import os, sys, glob, easy
import os.path as osp

def get_loss(line, token):
    idx = line.find(token)
    end = line.find('[', idx)
    piece = line[idx+len(token):end].strip(': ,[]')
    try:
        return round(float(piece), 4)
    except:
        return None

LOSSES = ['rpn_cls_loss', 'rpn_reg_loss', 'rcnn_0_cls_loss', 'rcnn_0_reg_loss', 'rcnn_1_cls_loss', 'rcnn_1_reg_loss',
          'rcnn_2_cls_loss', 'rcnn_2_reg_loss', 'tot_loss']

def get_epoch2(log):
    res = []
    is_epoch2 = False
    for line in open(log):
        if 'At epoch 2, iteration 0' in line:
            is_epoch2 = True
        if 'At epoch 3, iteration 0' in line:
            break
        if is_epoch2 == True:
            res.append(line)
    return res

def avg(lst):
    return round(sum(lst)/len(lst), 4)

if __name__ == '__main__':
    log = sys.argv[1]
    epoch2_log = get_epoch2(log)
    losses = []
    for loss in LOSSES:
        losses.append([get_loss(line, loss) for line in epoch2_log if loss in line])
    print(easy.join('\t', LOSSES))
    print(easy.join('\t', [avg(x) for x in losses]))
    
